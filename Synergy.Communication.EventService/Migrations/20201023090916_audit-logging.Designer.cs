// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Synergy.Communication.EventService.DBContexts;

namespace Synergy.Communication.EventService.Migrations
{
    [DbContext(typeof(EventServiceDbContext))]
    [Migration("20201023090916_audit-logging")]
    partial class auditlogging
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Synergy.Communication.EventService.Models.Entities.AppIdentity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("ApplicationId")
                        .HasColumnName("application_id")
                        .HasColumnType("text")
                        .HasMaxLength(36);

                    b.Property<string>("ContactEmail")
                        .HasColumnName("contact_email")
                        .HasColumnType("text")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz");

                    b.Property<string>("NotificationEndpoint")
                        .HasColumnName("notification_endpoint")
                        .HasColumnType("text")
                        .HasMaxLength(200);

                    b.Property<short>("Status")
                        .HasColumnName("status")
                        .HasColumnType("smallint");

                    b.Property<string>("TenantId")
                        .HasColumnName("tenant_id")
                        .HasColumnType("text")
                        .HasMaxLength(36);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("timestamptz");

                    b.Property<string>("VesselIMO")
                        .HasColumnName("vessel_imo")
                        .HasColumnType("text")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("applications","public");
                });

            modelBuilder.Entity("Synergy.Communication.EventService.Models.Entities.Audit.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("KeyValues")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("NewValues")
                        .HasColumnType("text");

                    b.Property<string>("OldValues")
                        .HasColumnType("text");

                    b.Property<string>("TableName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("Synergy.Communication.EventService.Models.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ApplicationIdentifier")
                        .HasColumnName("app_identifier")
                        .HasColumnType("uuid");

                    b.Property<string>("Attachments")
                        .HasColumnName("attachments")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnName("created_at")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Data")
                        .HasColumnName("data")
                        .HasColumnType("jsonb");

                    b.Property<string>("EventName")
                        .HasColumnName("event_name")
                        .HasColumnType("text")
                        .HasMaxLength(50);

                    b.Property<long>("SeqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("seq_id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<short>("Status")
                        .HasColumnName("status")
                        .HasColumnType("smallint");

                    b.Property<short>("Type")
                        .HasColumnName("event_type")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnName("updated_at")
                        .HasColumnType("timestamptz");

                    b.HasKey("Id");

                    b.ToTable("published_events","public");
                });
#pragma warning restore 612, 618
        }
    }
}
